
local old = _G.fs


function list(path)
	return old.list(rootPath..path)
end

function exists(path)
	return old.exists(rootPath..path)
end

function isDir(path)
	return old.isDir(rootPath..path)
end

function isReadOnly(path)
	return old.isReadOnly(rootPath..path)
end

function getName(path)
	return old.getName(path)
end

function getDrive(path)
	return old.getDrive(rootPath..path)
end

function getFreeSpace(path)
	return old.getFreeSpace(rootPath..path)
end

function getSize(path)
	return old.getSize(rootPath..path)
end

function makeDir(path)
	return old.makeDir(rootPath..path)
end

function move(p1, p2)
	return old.move(rootPath..p1, rootPath..p2)
end

function copy(p1, p2)
	return old.copy(rootPath..p1, rootPath..p2)
end

function delete(path)
	return old.delete(rootPath..path)
end

function combine(p1, p2)
	return old.combine(p1, p2)
end

function open(path, mode)
	return old.open(rootPath..path, mode)
end

function find(wildcard)
	local f = old.find(rootPath..wildcard)
	local t = {}
	for k, v in ipairs(f) do
		local a = string.sub(v, #rootPath)
		table.insert(t, a)
	end
	return t
end

function getDir(path)
	return old.getDir(path)
end

function complete()
	return nil
end